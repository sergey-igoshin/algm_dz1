"""
Задание 3.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

crypto = {'Dash': 96.56, 'Efhereum': 2600, 'Bitcoint': 38501, 'Bitcoint Cash': 300.17, 'Litecoint': 111.56, 'Ripple': 0.63}


# сложность O(n)
max_rate = {}                                                               # O(1)
cnt = 3                                                                     # O(1)
for key, val in sorted(crypto.items(), key=lambda x: x[1], reverse=True):   # O(n + n log n + 1 + n)
    if cnt > 0:                                                             # O(1)
        max_rate.setdefault(key, val)                                       # O(1)
    else:                                                                   # O(1)
        break                                                               # O(1)
    cnt -= 1                                                                # O(1)

print(max_rate)
# T(n) = 1 + 1 + n + n log n + 1 + n * (1 + 1 + 1 + 1 + 1) = 6n + n log n + 3


# сложность O(n**2)
max_rate_2, count = {}, 3               # O(1 + 1)
while len(max_rate_2) < count:          # O(1 + n)
    k = v = 0                           # O(1 + 1)
    for key, val in crypto.items():     # O(n)
        if v < val:                     # O(1)
            v = val                     # O(1)
            k = key                     # O(1)
    crypto.pop(k)                       # O(1)
    max_rate_2.setdefault(k, v)         # O(1)

print(max_rate_2)
# T(n) = 1 + 1 + 1 + n * (1 + 1 + n + 1 + 1 + 1 + 1 + 1) = n**2 + 7n + 3
# (6n + n log n + 3) < (n**2 + 7n + 3)
